/* src/App.css */
#root {
  /* Remove max-width to allow full expansion */
  /* max-width: 1280px; */ /* Commented out or remove this line */
  width: 100%; /* Ensure it takes full width */
  margin: 0 auto;
  /* Padding might be better handled by individual sections or a main layout component */
  /* padding: 2rem; */ /* Consider removing or setting to 0 if sections handle their own padding */
  padding: 0;
  text-align: left; /* Or remove if child components handle text alignment */
  display: flex; /* Added to make the App component a flex container */
  flex-direction: column; /* Stack children (Navbar, main, Footer) vertically */
  min-height: 100vh; /* Ensure the app takes at least the full viewport height */
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.react:hover {
  filter: drop-shadow(0 0 2em #61dafbaa);
}

@keyframes logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@media (prefers-reduced-motion: no-preference) {
  a:nth-of-type(2) .logo {
    animation: logo-spin infinite 20s linear;
  }
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}
```css
/* src/index.css */
:root {
  font-family: system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  /* Base text color and background are often set here or in GlobalStyles */
  /* color: rgba(255, 255, 255, 0.87); */ /* Example for dark mode */
  /* background-color: #242424; */ /* Example for dark mode */

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html {
  box-sizing: border-box; /* Recommended for easier sizing */
  width: 100%;
  height: 100%;
}

*, *:before, *:after {
  box-sizing: inherit; /* Inherit box-sizing */
}

body {
  margin: 0;
  /* display: flex; */ /* Remove flex centering for a full page layout */
  /* place-items: center; */ /* Remove flex centering */
  min-width: 320px; /* Good for responsiveness */
  min-height: 100vh;
  width: 100%; /* Ensure body takes full width */
  /* Background color for the body, if not handled by GlobalStyles or App wrapper */
  background-color: #ffffff; /* Default to light, can be overridden by :root dark mode */
  color: #213547; /* Default text color for light mode */
}

/* Ensure main content area within App can grow */
/* This assumes your App.tsx has a <main> tag wrapping the sections */
/* If #root is already display:flex and flex-direction:column, this might be less critical */
/* but ensures the main content area can expand. */
/* Alternatively, you can apply flex-grow: 1 to the main element directly via its component or a class */
#root > main {
  flex-grow: 1; /* Allows the main content to expand and push the footer down */
}


h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  /* background-color: #1a1a1a; */ /* Handled by prefers-color-scheme */
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

@media (prefers-color-scheme: dark) {
  :root {
    color: rgba(255, 255, 255, 0.87);
    background-color: #242424;
  }
  button {
    background-color: #1a1a1a;
  }
}
